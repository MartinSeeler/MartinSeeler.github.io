@import url(https://fonts.googleapis.com/css?family=Amatic+SC:700);@import url(https://fonts.googleapis.com/css?family=Londrina+Solid);@import url(https://fonts.googleapis.com/css?family=Fjord+One);@import url(https://fonts.googleapis.com/css?family=Crimson+Text:400,400italic,600,600italic);@import url(https://fonts.googleapis.com/css?family=Stalemate);@import url(https://fonts.googleapis.com/css?family=Lusitana:400,700);@import url(https://fonts.googleapis.com/css?family=Yeseva+One);@import url(https://fonts.googleapis.com/css?family=Lora:400,700);@import url(https://fonts.googleapis.com/css?family=Jacques+Francois);@import url(https://fonts.googleapis.com/css?family=Jim+Nightshade);@import url(https://fonts.googleapis.com/css?family=Kaushan+Script);@import url(https://fonts.googleapis.com/css?family=Sorts+Mill+Goudy);@import url(https://fonts.googleapis.com/css?family=Goudy+Bookletter+1911);html{box-sizing:border-box}html *{box-sizing:inherit}body{max-width:960px;margin-left:auto;margin-right:auto}html{font-family:"Crimson Text";font-weight:400;color:rgba(46,68,83,0.87);font-size:12px;line-height:1.618em}@media (min-width: 600px){html{font-size:-webkit-calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){html{font-size:20px}}h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0}p,blockquote,pre,address,dl,ol,ul,table{margin-bottom:1.618em}h1,h2,h3,h4,h5,h6{font-family:"Goudy Bookletter 1911","serif";font-weight:400;color:#2E4453;clear:both}h1{font-size:22.00228px;margin-top:1.10307em;line-height:1.32368em;margin-bottom:0.22061em}@media (min-width: 600px){h1{font-size:-webkit-calc( 22.00228px + (36.67047 - 22.00228) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 22.00228px + (36.67047 - 22.00228) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h1{font-size:36.67047px;margin-top:1.10307em;line-height:1.32368em;margin-bottom:0.22061em}}h2{font-size:19.48994px;margin-top:1.24526em;line-height:1.49431em;margin-bottom:0.28739em}@media (min-width: 600px){h2{font-size:-webkit-calc( 19.48994px + (32.48323 - 19.48994) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 19.48994px + (32.48323 - 19.48994) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h2{font-size:32.48323px;margin-top:1.24526em;line-height:1.49431em;margin-bottom:0.27205em}}h3{font-size:17.26447px;margin-top:1.40578em;line-height:1.68693em;margin-bottom:0.33001em}@media (min-width: 600px){h3{font-size:-webkit-calc( 17.26447px + (28.77411 - 17.26447) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 17.26447px + (28.77411 - 17.26447) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h3{font-size:28.77411px;margin-top:1.40578em;line-height:1.68693em;margin-bottom:0.31047em}}h4{font-size:15.29311px;margin-top:1.58699em;line-height:1.90439em;margin-bottom:0.37966em}@media (min-width: 600px){h4{font-size:-webkit-calc( 15.29311px + (25.48852 - 15.29311) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 15.29311px + (25.48852 - 15.29311) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h4{font-size:25.48852px;margin-top:1.58699em;line-height:1.90439em;margin-bottom:0.35476em}}h5{font-size:13.54686px;margin-top:1.79156em;line-height:2.14987em;margin-bottom:0.35831em}@media (min-width: 600px){h5{font-size:-webkit-calc( 13.54686px + (22.57809 - 13.54686) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 13.54686px + (22.57809 - 13.54686) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h5{font-size:22.57809px;margin-top:1.79156em;line-height:2.14987em;margin-bottom:0.35831em}}h6{font-size:12px;margin-top:2.0225em;line-height:2.427em;margin-bottom:0.47192em}@media (min-width: 600px){h6{font-size:-webkit-calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h6{font-size:20px;margin-top:2.0225em;line-height:2.427em;margin-bottom:0.43821em}}blockquote{font-style:italic}blockquote cite{display:block;font-style:normal}pre{padding:0.809em;margin-bottom:1.618em}pre code{padding:0}code{font-family:"Courier New","Courier","Lucida Sans Typewriter","Lucida Typewriter","monospace";padding:0.0809em 0.2427em;line-height:0}big,small,sub,sup{line-height:0}abbr,acronym{border-bottom:1px dotted currentColor;cursor:help}address{font-style:normal}dt{color:#2E4453;font-weight:bold}ul{padding-left:1.1em}ol{padding-left:1.4em}fieldset{padding:0.809em 1.618em 1.618em;border-width:1px;border-style:solid;max-width:100%;margin-bottom:1.6989em}@media (min-width: 1000px){fieldset{margin-bottom:1.92137em}}fieldset button,fieldset input[type="submit"]{margin-bottom:0}legend{color:#2E4453;font-weight:bold}input[type="text"],input[type="email"],input[type="password"],textarea{display:block;max-width:100%;padding:0.4045em;font-size:12px;margin-bottom:1.09215em}@media (min-width: 600px){input[type="text"],input[type="email"],input[type="password"],textarea{font-size:-webkit-calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){input[type="text"],input[type="email"],input[type="password"],textarea{font-size:20px;margin-bottom:0.47529em}}input[type="submit"],button{display:block;cursor:pointer;font-size:12px;padding:0.4045em 1.618em;margin-bottom:1.09215em}@media (min-width: 600px){input[type="submit"],button{font-size:-webkit-calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 12px + (20 - 12) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){input[type="submit"],button{font-size:20px;margin-bottom:1.2135em}}label{display:block;padding-bottom:0.20225em;margin-bottom:-0.20225em}table{width:100%;border-spacing:0;border-collapse:collapse;margin-bottom:2.0225em}@media (min-width: 1000px){table{margin-bottom:1.8607em}}th{text-align:left;color:#2E4453;padding:0.20225em 0.809em}@media (min-width: 1000px){th{padding:0.4045em 0.809em}}td{padding:0.809em;padding:0.20225em 0.809em}@media (min-width: 1000px){td{padding:0.4045em 0.809em}}time{color:rgba(46,68,83,0.38)}article>header{text-align:center}code{line-height:inherit}body{width:100%;max-width:100%}body,html{background-color:#FFF}main{max-width:90%;float:none;margin-right:auto;margin-left:auto}@media (min-width: 1024px){main{max-width:70%}}@media (min-width: 1200px){main{max-width:50%}}.github-project{max-width:960px;margin-left:auto;margin-right:auto}.github-project a{text-decoration:none;word-break:break-word}.github-project img{width:100%;margin-top:10px;border-radius:10%}.github-project:after{content:"";display:table;clear:both}.github-project>.column:nth-of-type(2n+1){width:-webkit-calc(20% - 10px - 10px + 5px + 5px);width:calc(20% - 10px - 10px + 5px + 5px);float:left;margin:10px;clear:left;margin-left:0}.github-project>.column:nth-of-type(2n+2){width:-webkit-calc(80% - 10px - 10px + 5px + 5px);width:calc(80% - 10px - 10px + 5px + 5px);float:left;margin:10px;clear:none;margin-right:0}.github-project h3{margin-top:0}ul.tag-bar{list-style-type:none;margin-left:0;padding-left:0}ul.tag-bar li.tag{display:inline-block;border:2px solid #333;border-radius:5px;padding:5px 10px;color:#333}ul.tag-bar li.tag:hover{border:2px solid #777;color:#333}.github-corner:hover .octo-arm{-webkit-animation:octocat-wave 560ms ease-in-out;animation:octocat-wave 560ms ease-in-out}@-webkit-keyframes octocat-wave{0%,100%{-webkit-transform:rotate(0);transform:rotate(0)}20%,60%{-webkit-transform:rotate(-25deg);transform:rotate(-25deg)}40%,80%{-webkit-transform:rotate(10deg);transform:rotate(10deg)}}@keyframes octocat-wave{0%,100%{-webkit-transform:rotate(0);transform:rotate(0)}20%,60%{-webkit-transform:rotate(-25deg);transform:rotate(-25deg)}40%,80%{-webkit-transform:rotate(10deg);transform:rotate(10deg)}}@media (max-width: 500px){.github-corner:hover .octo-arm{-webkit-animation:none;animation:none}.github-corner .octo-arm{-webkit-animation:octocat-wave 560ms ease-in-out;animation:octocat-wave 560ms ease-in-out}}

/*# sourceMappingURL=data:application/json;base64, */
