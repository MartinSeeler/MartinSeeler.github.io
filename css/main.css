@import url(https://fonts.googleapis.com/css?family=Amatic+SC:700);@import url(https://fonts.googleapis.com/css?family=Londrina+Solid);@import url(https://fonts.googleapis.com/css?family=Fjord+One);@import url(https://fonts.googleapis.com/css?family=Crimson+Text:400,400italic,600,600italic);@import url(https://fonts.googleapis.com/css?family=Stalemate);html{box-sizing:border-box}html *{box-sizing:inherit}body{max-width:960px;margin-left:auto;margin-right:auto}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}html{background:#fff;color:#000;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}html,button,input,select,textarea{font-family:sans-serif}body{margin:0}a{background:transparent}a:focus{outline:thin dotted}a:hover,a:active{outline:0}h1{font-size:2em;margin:0.67em 0}h2{font-size:1.5em;margin:0.83em 0}h3{font-size:1.17em;margin:1em 0}h4{font-size:1em;margin:1.33em 0}h5{font-size:0.83em;margin:1.67em 0}h6{font-size:0.75em;margin:2.33em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace, serif;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:"\201C" "\201D" "\2018" "\2019"}q:before,q:after{content:'';content:none}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}html{font-family:"Crimson Text";font-weight:400;color:#556270;font-size:16px;line-height:1.618em}@media (min-width: 600px){html{font-size:-webkit-calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){html{font-size:22px}}h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0}p,blockquote,pre,address,dl,ol,ul,table{margin-bottom:1.618em}h1,h2,h3,h4,h5,h6{font-family:"Fjord One","serif";font-weight:400;color:#333B43;clear:both}h1{font-size:29.33638px;margin-top:1.10307em;line-height:1.32368em;margin-bottom:0.22061em}@media (min-width: 600px){h1{font-size:-webkit-calc( 29.33638px + (40.33752 - 29.33638) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 29.33638px + (40.33752 - 29.33638) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h1{font-size:40.33752px;margin-top:1.10307em;line-height:1.32368em;margin-bottom:0.22061em}}h2{font-size:25.98658px;margin-top:1.24526em;line-height:1.49431em;margin-bottom:0.2778em}@media (min-width: 600px){h2{font-size:-webkit-calc( 25.98658px + (35.73155 - 25.98658) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 25.98658px + (35.73155 - 25.98658) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h2{font-size:35.73155px;margin-top:1.24526em;line-height:1.49431em;margin-bottom:0.26996em}}h3{font-size:23.01929px;margin-top:1.40578em;line-height:1.68693em;margin-bottom:0.3178em}@media (min-width: 600px){h3{font-size:-webkit-calc( 23.01929px + (31.65152 - 23.01929) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 23.01929px + (31.65152 - 23.01929) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h3{font-size:31.65152px;margin-top:1.40578em;line-height:1.68693em;margin-bottom:0.3078em}}h4{font-size:20.39081px;margin-top:1.58699em;line-height:1.90439em;margin-bottom:0.36409em}@media (min-width: 600px){h4{font-size:-webkit-calc( 20.39081px + (28.03737 - 20.39081) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 20.39081px + (28.03737 - 20.39081) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h4{font-size:28.03737px;margin-top:1.58699em;line-height:1.90439em;margin-bottom:0.35136em}}h5{font-size:18.06248px;margin-top:1.79156em;line-height:2.14987em;margin-bottom:0.35831em}@media (min-width: 600px){h5{font-size:-webkit-calc( 18.06248px + (24.8359 - 18.06248) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 18.06248px + (24.8359 - 18.06248) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h5{font-size:24.8359px;margin-top:1.79156em;line-height:2.14987em;margin-bottom:0.35831em}}h6{font-size:16px;margin-top:2.0225em;line-height:2.427em;margin-bottom:0.45506em}@media (min-width: 600px){h6{font-size:-webkit-calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){h6{font-size:22px;margin-top:2.0225em;line-height:2.427em;margin-bottom:0.42978em}}blockquote{font-style:italic}blockquote cite{display:block;font-style:normal}pre{padding:0.809em;margin-bottom:1.618em}pre code{padding:0}code{font-family:"Courier New","Courier","Lucida Sans Typewriter","Lucida Typewriter","monospace";padding:0.0809em 0.2427em;line-height:0}big,small,sub,sup{line-height:0}abbr,acronym{border-bottom:1px dotted currentColor;cursor:help}address{font-style:normal}dt{color:#333B43;font-weight:bold}ul{padding-left:1.1em}ol{padding-left:1.4em}fieldset{padding:0.809em 1.618em 1.618em;border-width:1px;border-style:solid;max-width:100%;margin-bottom:1.69155em}@media (min-width: 1000px){fieldset{margin-bottom:1.93057em}}fieldset button,fieldset input[type="submit"]{margin-bottom:0}legend{color:#333B43;font-weight:bold}input[type="text"],input[type="email"],input[type="password"],textarea{display:block;max-width:100%;padding:0.4045em;font-size:16px;margin-bottom:1.06641em}@media (min-width: 600px){input[type="text"],input[type="email"],input[type="password"],textarea{font-size:-webkit-calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){input[type="text"],input[type="email"],input[type="password"],textarea{font-size:22px;margin-bottom:0.46885em}}input[type="submit"],button{display:block;cursor:pointer;font-size:16px;padding:0.4045em 1.618em;margin-bottom:1.10318em}@media (min-width: 600px){input[type="submit"],button{font-size:-webkit-calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)));font-size:calc( 16px + (22 - 16) * ((100vw - 600px) / (1000 - 600)))}}@media (min-width: 1000px){input[type="submit"],button{font-size:22px;margin-bottom:1.2135em}}label{display:block;padding-bottom:0.20225em;margin-bottom:-0.22064em}table{width:100%;border-spacing:0;border-collapse:collapse;margin-bottom:1.98573em}@media (min-width: 1000px){table{margin-bottom:1.83864em}}th{text-align:left;color:#333B43;padding:0.20225em 0.809em}@media (min-width: 1000px){th{padding:0.4045em 0.809em}}td{padding:0.809em;padding:0.20225em 0.809em}@media (min-width: 1000px){td{padding:0.4045em 0.809em}}time{color:#A5ABB1}body{width:100%;max-width:100%}body,html{background-color:#FAFCFC}main{max-width:90%;float:none;margin-right:auto;margin-left:auto}@media (min-width: 1024px){main{max-width:70%}}@media (min-width: 1200px){main{max-width:50%}}.github-project{max-width:960px;margin-left:auto;margin-right:auto}.github-project a{text-decoration:none;word-break:break-word}.github-project img{width:100%;margin-top:10px;border-radius:10%}.github-project:after{content:"";display:table;clear:both}.github-project>.column:nth-of-type(2n+1){width:-webkit-calc(20% - 10px - 10px + 5px + 5px);width:calc(20% - 10px - 10px + 5px + 5px);float:left;margin:10px;clear:left;margin-left:0}.github-project>.column:nth-of-type(2n+2){width:-webkit-calc(80% - 10px - 10px + 5px + 5px);width:calc(80% - 10px - 10px + 5px + 5px);float:left;margin:10px;clear:none;margin-right:0}.github-project h3{margin-top:0}ul.tag-bar{list-style-type:none;margin-left:0;padding-left:0}ul.tag-bar li.tag{display:inline-block;border:2px solid #333;border-radius:5px;padding:5px 10px;color:#333}ul.tag-bar li.tag:hover{border:2px solid #777;color:#333}

/*# sourceMappingURL=data:application/json;base64, */
